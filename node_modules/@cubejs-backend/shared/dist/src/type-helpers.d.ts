/**
 * This module export only type helpers for using it across Cube.js project
 */
export declare type ResolveAwait<T> = T extends {
    then(onfulfilled?: (value: infer U) => unknown): unknown;
} ? U : T;
export declare type Constructor<T> = new (...args: any[]) => T;
export declare type Required<T, K extends keyof T> = {
    [X in Exclude<keyof T, K>]?: T[X];
} & {
    [P in K]-?: T[P];
};
export declare type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;
//# sourceMappingURL=type-helpers.d.ts.map