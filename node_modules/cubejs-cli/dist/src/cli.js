"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
const server_1 = require("./command/server");
const deploy_1 = require("./command/deploy");
const create_1 = require("./command/create");
const generate_1 = require("./command/generate");
const token_1 = require("./command/token");
const typegen_1 = require("./command/typegen");
const auth_1 = require("./command/auth");
const utils_1 = require("./utils");
const packageJson = utils_1.loadCliManifest();
commander_1.default.name(Object.keys(packageJson.bin)[0])
    .version(packageJson.version);
commander_1.default
    .usage('<command> [options]')
    .on('--help', () => {
    console.log('');
    console.log('Use cubejs <command> --help for more information about a command.');
    console.log('');
});
(async () => {
    await auth_1.configureAuthCommand(commander_1.default);
    await token_1.configureTokenCommand(commander_1.default);
    await typegen_1.configureTypegenCommand(commander_1.default);
    await create_1.configureCreateCommand(commander_1.default);
    await generate_1.configureGenerateCommand(commander_1.default);
    await deploy_1.configureDeployCommand(commander_1.default);
    await server_1.configureServerCommand(commander_1.default);
    if (!process.argv.slice(2).length) {
        commander_1.default.help();
    }
    commander_1.default.parse(process.argv);
})();
//# sourceMappingURL=cli.js.map